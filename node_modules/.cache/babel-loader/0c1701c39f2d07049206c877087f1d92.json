{"ast":null,"code":"import _classCallCheck from\"/Users/eldorado/dev/mesto-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/eldorado/dev/mesto-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";var Api=/*#__PURE__*/function(){function Api(options){_classCallCheck(this,Api);this._baseUrl=options.baseUrl;this._token=options.headers.authorization;}_createClass(Api,[{key:\"_handleResponse\",value:function _handleResponse(res){if(res.ok){return res.json();}return Promise.reject(\"Error: \".concat(res.status));}},{key:\"getCards\",value:function getCards(){return fetch(\"\".concat(this._baseUrl,\"/cards\"),{headers:{authorization:this._token}}).then(this._handleResponse);}},{key:\"addNewCard\",value:function addNewCard(data){return fetch(\"\".concat(this._baseUrl,\"/cards\"),{method:'POST',headers:{authorization:this._token,'Content-Type':'application/json'},body:JSON.stringify({name:data.name,link:data.link})}).then(this._handleResponse);}},{key:\"deleteCard\",value:function deleteCard(cardId){return fetch(\"\".concat(this._baseUrl,\"/cards/\").concat(cardId),{method:'DELETE',headers:{authorization:this._token,'Content-Type':'application/json'}}).then(this._handleResponse);}},{key:\"getUserInfo\",value:function getUserInfo(){return fetch(\"\".concat(this._baseUrl,\"/users/me\"),{headers:{authorization:this._token}}).then(this._handleResponse);}},{key:\"setUserInfo\",value:function setUserInfo(data){return fetch(\"\".concat(this._baseUrl,\"/users/me\"),{method:'PATCH',headers:{authorization:this._token,'Content-Type':'application/json'},body:JSON.stringify({name:data.name,about:data.about})}).then(this._handleResponse);}},{key:\"setUserAvatar\",value:function setUserAvatar(data){return fetch(\"\".concat(this._baseUrl,\"/users/me/avatar\"),{method:'PATCH',headers:{authorization:this._token,'Content-Type':'application/json'},body:JSON.stringify({avatar:data.avatar})}).then(this._handleResponse);}},{key:\"changeLikeCardStatus\",value:function changeLikeCardStatus(cardId,isLiked){if(isLiked){return this._deleteLike(cardId);}else{return this._setLike(cardId);}}},{key:\"_deleteLike\",value:function _deleteLike(cardId){return fetch(\"\".concat(this._baseUrl,\"/cards/likes/\").concat(cardId),{method:'DELETE',headers:{authorization:this._token,'Content-Type':'application/json'}}).then(this._handleResponse);}},{key:\"_setLike\",value:function _setLike(cardId){return fetch(\"\".concat(this._baseUrl,\"/cards/likes/\").concat(cardId),{method:'PUT',headers:{authorization:this._token,'Content-Type':'application/json'}}).then(this._handleResponse);}}]);return Api;}();var api=new Api({baseUrl:'https://mesto.nomoreparties.co/v1/cohort-24',headers:{authorization:'2a6d7634-25aa-4e7e-bcf3-8309525480f9','Content-Type':'application/json'}});export default api;","map":{"version":3,"sources":["/Users/eldorado/dev/mesto-react/src/utils/api.js"],"names":["Api","options","_baseUrl","baseUrl","_token","headers","authorization","res","ok","json","Promise","reject","status","fetch","then","_handleResponse","data","method","body","JSON","stringify","name","link","cardId","about","avatar","isLiked","_deleteLike","_setLike","api"],"mappings":"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","sourcesContent":["class Api {\n  \n  constructor(options) {\n    this._baseUrl = options.baseUrl;\n    this._token = options.headers.authorization;\n  }\n\n  _handleResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Error: ${res.status}`);\n  }\n\n  getCards() {\n    return fetch(`${this._baseUrl}/cards`, {\n      headers: {\n        authorization: this._token\n      }\n    })\n      .then(this._handleResponse)\n  }\n\n  addNewCard(data) {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: 'POST',\n      headers: {\n        authorization: this._token,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: data.name,\n        link: data.link\n      })\n    })\n    .then(this._handleResponse)\n  }\n\n  deleteCard(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}`, {\n      method: 'DELETE',\n      headers: {\n        authorization: this._token,\n        'Content-Type': 'application/json'\n      }\n    })\n    .then(this._handleResponse)\n  }\n\n  getUserInfo() {\n    return fetch(`${this._baseUrl}/users/me`, {\n      headers: {\n        authorization: this._token\n      }\n    })\n    .then(this._handleResponse)\n  }\n\n  setUserInfo(data) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: 'PATCH',\n      headers: {\n        authorization: this._token,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: data.name,\n        about: data.about\n      })\n    })\n    .then(this._handleResponse)\n  }\n\n  setUserAvatar(data) {\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: {\n        authorization: this._token,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        avatar: data.avatar\n      })\n    })\n    .then(this._handleResponse)\n  }\n\n  changeLikeCardStatus(cardId, isLiked) {\n    if (isLiked) {\n      return this._deleteLike(cardId);\n    } else {\n      return this._setLike(cardId);\n    }\n  }\n\n  _deleteLike(cardId) {\n    return fetch(`${this._baseUrl}/cards/likes/${cardId}`, {\n      method: 'DELETE',\n      headers: {\n        authorization: this._token,\n        'Content-Type': 'application/json'\n      }\n    })\n    .then(this._handleResponse)\n  }\n\n  _setLike(cardId) {\n    return fetch(`${this._baseUrl}/cards/likes/${cardId}`, {\n      method: 'PUT',\n      headers: {\n        authorization: this._token,\n        'Content-Type': 'application/json'\n      }\n    })\n    .then(this._handleResponse)\n  }\n}\n\nconst api = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-24',\n  headers: {\n    authorization: '2a6d7634-25aa-4e7e-bcf3-8309525480f9',\n    'Content-Type': 'application/json'\n  }\n})\n\nexport default api;\n"]},"metadata":{},"sourceType":"module"}