{"ast":null,"code":"class Api {\n  constructor(options) {\n    this._baseUrl = options.baseUrl;\n    this._token = options.headers.authorization;\n  }\n\n  _handleResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n\n    return Promise.reject(`Error: ${res.status}`);\n  }\n\n  getCards() {\n    return fetch(`${this._baseUrl}/cards`, {\n      headers: {\n        authorization: this._token\n      }\n    }).then(this._handleResponse);\n  }\n\n  addNewCard(data) {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: 'POST',\n      headers: {\n        authorization: this._token,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: data.name,\n        link: data.link\n      })\n    }).then(this._handleResponse);\n  }\n\n  deleteCard(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}`, {\n      method: 'DELETE',\n      headers: {\n        authorization: this._token,\n        'Content-Type': 'application/json'\n      }\n    }).then(this._handleResponse);\n  }\n\n  getUserInfo() {\n    return fetch(`${this._baseUrl}/users/me`, {\n      headers: {\n        authorization: this._token\n      }\n    }).then(this._handleResponse);\n  }\n\n  setUserInfo(data) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: 'PATCH',\n      headers: {\n        authorization: this._token,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: data.name,\n        about: data.about\n      })\n    }).then(this._handleResponse);\n  }\n\n  setUserAvatar(data) {\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: {\n        authorization: this._token,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        avatar: data.avatar\n      })\n    }).then(this._handleResponse);\n  }\n\n  changeLikeCardStatus(cardId, isLiked) {\n    if (isLiked) {\n      return this._deleteLike(cardId);\n    } else {\n      return this._setLike(cardId);\n    }\n  }\n\n  _deleteLike(cardId) {\n    return fetch(`${this._baseUrl}/cards/likes/${cardId}`, {\n      method: 'DELETE',\n      headers: {\n        authorization: this._token,\n        'Content-Type': 'application/json'\n      }\n    }).then(this._handleResponse);\n  }\n\n  setLike(cardId) {\n    return fetch(`${this._baseUrl}/cards/likes/${cardId}`, {\n      method: 'PUT',\n      headers: {\n        authorization: this._token,\n        'Content-Type': 'application/json'\n      }\n    }).then(this._handleResponse);\n  }\n\n}\n\nconst api = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-24',\n  headers: {\n    authorization: '2a6d7634-25aa-4e7e-bcf3-8309525480f9',\n    'Content-Type': 'application/json'\n  }\n});\nexport default api;","map":{"version":3,"sources":["/Users/eldorado/dev/mesto-react/src/utils/api.js"],"names":["Api","constructor","options","_baseUrl","baseUrl","_token","headers","authorization","_handleResponse","res","ok","json","Promise","reject","status","getCards","fetch","then","addNewCard","data","method","body","JSON","stringify","name","link","deleteCard","cardId","getUserInfo","setUserInfo","about","setUserAvatar","avatar","changeLikeCardStatus","isLiked","_deleteLike","_setLike","setLike","api"],"mappings":"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","sourcesContent":["class Api {\n  \n  constructor(options) {\n    this._baseUrl = options.baseUrl;\n    this._token = options.headers.authorization;\n  }\n\n  _handleResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Error: ${res.status}`);\n  }\n\n  getCards() {\n    return fetch(`${this._baseUrl}/cards`, {\n      headers: {\n        authorization: this._token\n      }\n    })\n      .then(this._handleResponse)\n  }\n\n  addNewCard(data) {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: 'POST',\n      headers: {\n        authorization: this._token,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: data.name,\n        link: data.link\n      })\n    })\n    .then(this._handleResponse)\n  }\n\n  deleteCard(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}`, {\n      method: 'DELETE',\n      headers: {\n        authorization: this._token,\n        'Content-Type': 'application/json'\n      }\n    })\n    .then(this._handleResponse)\n  }\n\n  getUserInfo() {\n    return fetch(`${this._baseUrl}/users/me`, {\n      headers: {\n        authorization: this._token\n      }\n    })\n    .then(this._handleResponse)\n  }\n\n  setUserInfo(data) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: 'PATCH',\n      headers: {\n        authorization: this._token,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: data.name,\n        about: data.about\n      })\n    })\n    .then(this._handleResponse)\n  }\n\n  setUserAvatar(data) {\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: {\n        authorization: this._token,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        avatar: data.avatar\n      })\n    })\n    .then(this._handleResponse)\n  }\n\n  changeLikeCardStatus(cardId, isLiked) {\n    if (isLiked) {\n      return this._deleteLike(cardId);\n    } else {\n      return this._setLike(cardId);\n    }\n  }\n\n  _deleteLike(cardId) {\n    return fetch(`${this._baseUrl}/cards/likes/${cardId}`, {\n      method: 'DELETE',\n      headers: {\n        authorization: this._token,\n        'Content-Type': 'application/json'\n      }\n    })\n    .then(this._handleResponse)\n  }\n\n  setLike(cardId) {\n    return fetch(`${this._baseUrl}/cards/likes/${cardId}`, {\n      method: 'PUT',\n      headers: {\n        authorization: this._token,\n        'Content-Type': 'application/json'\n      }\n    })\n    .then(this._handleResponse)\n  }\n}\n\nconst api = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-24',\n  headers: {\n    authorization: '2a6d7634-25aa-4e7e-bcf3-8309525480f9',\n    'Content-Type': 'application/json'\n  }\n})\n\nexport default api;\n"]},"metadata":{},"sourceType":"module"}