{"ast":null,"code":"var _jsxFileName = \"/Users/eldorado/dev/mesto-react/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport './../index.css';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport PopupWithForm from './PopupWithForm';\nimport ImagePopup from './ImagePopup';\nimport api from '../utils/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [currentUser, setCurrentUser] = useState({\n    name: 'Ирусик',\n    about: '(без доступа в сеть)',\n    avatar: ''\n  });\n  const [isEditProfilePopupOpen, setEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setAddPlacePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState('');\n  React.useEffect(() => {\n    api.getUserInfo().then(res => {\n      setCurrentUser(res);\n    }).catch(err => {\n      console.log(`Error: ${err}`);\n    });\n  }, []);\n\n  function handleEditProfilePopupOpen() {\n    setEditProfilePopupOpen(!isEditProfilePopupOpen);\n  }\n\n  function handleAddPlacePopupOpen() {\n    setAddPlacePopupOpen(!isAddPlacePopupOpen);\n  }\n\n  function handleEditAvatarPopupOpen() {\n    setEditAvatarPopupOpen(!isEditAvatarPopupOpen);\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n\n  function closeAllPopups() {\n    setEditProfilePopupOpen(false);\n    setAddPlacePopupOpen(false);\n    setEditAvatarPopupOpen(false);\n    setSelectedCard('');\n  }\n\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: translations[lang]\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"3jkYzmLjaBsJ5I7DjOslKSV2w/c=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/eldorado/dev/mesto-react/src/components/App.js"],"names":["React","useState","CurrentUserContext","Header","Main","Footer","PopupWithForm","ImagePopup","api","App","currentUser","setCurrentUser","name","about","avatar","isEditProfilePopupOpen","setEditProfilePopupOpen","isAddPlacePopupOpen","setAddPlacePopupOpen","isEditAvatarPopupOpen","setEditAvatarPopupOpen","selectedCard","setSelectedCard","useEffect","getUserInfo","then","res","catch","err","console","log","handleEditProfilePopupOpen","handleAddPlacePopupOpen","handleEditAvatarPopupOpen","handleCardClick","card","closeAllPopups","translations","lang"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,kBAAT,QAAmC,gCAAnC;AACA,OAAO,gBAAP;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,GAAP,MAAgB,cAAhB;;;AAGA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAC;AAC7CW,IAAAA,IAAI,EAAE,QADuC;AAE7CC,IAAAA,KAAK,EAAE,sBAFsC;AAG7CC,IAAAA,MAAM,EAAE;AAHqC,GAAD,CAA9C;AAMA,QAAM,CAACC,sBAAD,EAAyBC,uBAAzB,IAAoDf,QAAQ,CAAC,KAAD,CAAlE;AACA,QAAM,CAACgB,mBAAD,EAAsBC,oBAAtB,IAA8CjB,QAAQ,CAAC,KAAD,CAA5D;AACA,QAAM,CAACkB,qBAAD,EAAwBC,sBAAxB,IAAkDnB,QAAQ,CAAC,KAAD,CAAhE;AACA,QAAM,CAACoB,YAAD,EAAeC,eAAf,IAAkCrB,QAAQ,CAAC,EAAD,CAAhD;AAEAD,EAAAA,KAAK,CAACuB,SAAN,CAAgB,MAAM;AACpBf,IAAAA,GAAG,CAACgB,WAAJ,GACGC,IADH,CACSC,GAAD,IAAS;AACbf,MAAAA,cAAc,CAACe,GAAD,CAAd;AACD,KAHH,EAIGC,KAJH,CAIUC,GAAD,IAAS;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAa,UAASF,GAAI,EAA1B;AACD,KANH;AAOD,GARD,EAQG,EARH;;AAUA,WAASG,0BAAT,GAAsC;AACpCf,IAAAA,uBAAuB,CAAC,CAACD,sBAAF,CAAvB;AACD;;AAED,WAASiB,uBAAT,GAAmC;AACjCd,IAAAA,oBAAoB,CAAC,CAACD,mBAAF,CAApB;AACD;;AAED,WAASgB,yBAAT,GAAqC;AACnCb,IAAAA,sBAAsB,CAAC,CAACD,qBAAF,CAAtB;AACD;;AAED,WAASe,eAAT,CAAyBC,IAAzB,EAA+B;AAC7Bb,IAAAA,eAAe,CAACa,IAAD,CAAf;AACD;;AAED,WAASC,cAAT,GAA0B;AACxBpB,IAAAA,uBAAuB,CAAC,KAAD,CAAvB;AACAE,IAAAA,oBAAoB,CAAC,KAAD,CAApB;AACAE,IAAAA,sBAAsB,CAAC,KAAD,CAAtB;AACAE,IAAAA,eAAe,CAAC,EAAD,CAAf;AACD;;AAED,sBACE,QAAC,kBAAD,CAAoB,QAApB;AAA6B,IAAA,KAAK,EAAEe,YAAY,CAACC,IAAD;AAAhD;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GArDQ7B,G;;KAAAA,G;AAuDT,eAAeA,GAAf","sourcesContent":["import React, {useState} from 'react';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport './../index.css';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport PopupWithForm from './PopupWithForm';\nimport ImagePopup from './ImagePopup';\nimport api from '../utils/api';\n\n\nfunction App() {\n  const [currentUser, setCurrentUser] = useState({\n    name: 'Ирусик',\n    about: '(без доступа в сеть)',\n    avatar: '',\n  });\n\n  const [isEditProfilePopupOpen, setEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setAddPlacePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState('');\n\n  React.useEffect(() => {\n    api.getUserInfo()\n      .then((res) => {\n        setCurrentUser(res);\n      })\n      .catch((err) => {\n        console.log(`Error: ${err}`);\n      })\n  }, [])\n\n  function handleEditProfilePopupOpen() {\n    setEditProfilePopupOpen(!isEditProfilePopupOpen);\n  }\n\n  function handleAddPlacePopupOpen() {\n    setAddPlacePopupOpen(!isAddPlacePopupOpen);\n  }\n\n  function handleEditAvatarPopupOpen() {\n    setEditAvatarPopupOpen(!isEditAvatarPopupOpen);\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n\n  function closeAllPopups() {\n    setEditProfilePopupOpen(false);\n    setAddPlacePopupOpen(false);\n    setEditAvatarPopupOpen(false);\n    setSelectedCard('');\n  }\n\n  return (\n    <CurrentUserContext.Provider value={translations[lang]}>\n\n    </CurrentUserContext.Provider>\n\n    \n    \n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}