{"ast":null,"code":"var _jsxFileName = \"/Users/eldorado/dev/mesto-react/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport PopupWithForm from './PopupWithForm';\nimport ImagePopup from './ImagePopup';\nimport api from '../utils/api';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [currentUser, setCurrentUser] = useState({\n    name: 'Ирусик',\n    about: 'offline',\n    avatar: ''\n  });\n  const [isEditProfilePopupOpen, setEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setAddPlacePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = useState(false);\n  const [profileSubmitButtonText, setProfileSubmitButtonText] = useState('Сохранить');\n  const [avatarSubmitButtonText, setAvatarSubmitButtonText] = useState('Сохранить');\n  const [cardSubmitButtonText, setCardSubmitButtonText] = useState('Создать');\n  const [cards, setCards] = React.useState([]);\n  const [selectedCard, setSelectedCard] = useState(null);\n  React.useEffect(() => {\n    api.getCards().then(res => setCards(res)).catch(err => {\n      console.log(`Error: ${err}`);\n    });\n  }, []);\n  React.useEffect(() => {\n    api.getUserInfo().then(res => {\n      setCurrentUser(res);\n    }).catch(err => {\n      console.log(`Error: ${err}`);\n    });\n  }, []);\n  React.useEffect(() => {\n    Promise.all([api.getUserInfo(), api.getInitialCards()]);\n  }, []);\n\n  const handleUpdateUser = data => {\n    setProfileSubmitButtonText('Сохранение...');\n    api.setUserInfo(data).then(res => {\n      setCurrentUser(res);\n    }).then(() => {\n      setEditProfilePopupOpen(false);\n    }).catch(err => {\n      console.log(`Unable to update user info. ${err}`);\n    }).finally(() => {\n      setProfileSubmitButtonText('Сохранить');\n    });\n  };\n\n  const handleAddPlace = data => {\n    setCardSubmitButtonText('Сохранение...');\n    api.addNewCard(data).then(newCard => {\n      setCards([newCard, ...cards]);\n    }).then(() => {\n      setAddPlacePopupOpen(false);\n    }).catch(err => {\n      console.log(`Unable to publish a card. ${err}`);\n    }).finally(() => {\n      setCardSubmitButtonText('Создать');\n    });\n  };\n\n  const handleUpdateAvatar = data => {\n    setAvatarSubmitButtonText('Сохранение...');\n    api.setUserAvatar(data).then(res => {\n      setCurrentUser(res);\n    }).then(() => {\n      setEditAvatarPopupOpen(false);\n    }).catch(err => {\n      console.log(`Unable to update user avatar. ${err}`);\n    }).finally(() => {\n      setAvatarSubmitButtonText('Сохранить');\n    });\n  };\n\n  const handleCardLike = card => {\n    const isLiked = card.likes.some(item => item._id === currentUser._id);\n    api.changeLikeCardStatus(card._id, isLiked).then(newCard => {\n      setCards(state => state.map(currentCard => currentCard._id === card._id ? newCard : currentCard));\n    }).catch(err => {\n      console.log(`${err}`);\n    });\n  };\n\n  const handleCardDelete = card => {\n    api.deleteCard(card._id).then(() => {\n      setCards(cards.filter(item => item !== card));\n    }).catch(err => {\n      console.log(`${err}`);\n    });\n  };\n\n  function handleEditProfilePopupOpen() {\n    setEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlacePopupOpen() {\n    setAddPlacePopupOpen(true);\n  }\n\n  function handleEditAvatarPopupOpen() {\n    setEditAvatarPopupOpen(true);\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n\n  function closeAllPopups() {\n    setEditProfilePopupOpen(false);\n    setAddPlacePopupOpen(false);\n    setEditAvatarPopupOpen(false);\n    setSelectedCard(null);\n  }\n\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page__container\",\n        children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Main, {\n          cards: cards,\n          onEditProfile: handleEditProfilePopupOpen,\n          onAddPlace: handleAddPlacePopupOpen,\n          onEditAvatar: handleEditAvatarPopupOpen,\n          onCardClick: handleCardClick,\n          onCardLike: handleCardLike,\n          onCardDelete: handleCardDelete\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n          buttonText: profileSubmitButtonText,\n          isOpen: isEditProfilePopupOpen,\n          onUpdateUser: handleUpdateUser,\n          onClose: closeAllPopups\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n          buttonText: cardSubmitButtonText,\n          isOpen: isAddPlacePopupOpen,\n          onAddPlace: handleAddPlace,\n          onClose: closeAllPopups\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n          buttonText: avatarSubmitButtonText,\n          isOpen: isEditAvatarPopupOpen,\n          onUpdateAvatar: handleUpdateAvatar,\n          onClose: closeAllPopups\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PopupWithForm, {\n          name: \"confirm\",\n          title: \"\\u0412\\u044B \\u0443\\u0432\\u0435\\u0440\\u0435\\u043D\\u044B?\",\n          buttonText: \"\\u0414\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this), selectedCard && /*#__PURE__*/_jsxDEV(ImagePopup, {\n          card: selectedCard,\n          onClose: closeAllPopups\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"AErm5kQs2oRpldvYuyiE0BFJwrw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/eldorado/dev/mesto-react/src/components/App.js"],"names":["React","useState","Header","Main","Footer","EditProfilePopup","EditAvatarPopup","AddPlacePopup","PopupWithForm","ImagePopup","api","CurrentUserContext","App","currentUser","setCurrentUser","name","about","avatar","isEditProfilePopupOpen","setEditProfilePopupOpen","isAddPlacePopupOpen","setAddPlacePopupOpen","isEditAvatarPopupOpen","setEditAvatarPopupOpen","profileSubmitButtonText","setProfileSubmitButtonText","avatarSubmitButtonText","setAvatarSubmitButtonText","cardSubmitButtonText","setCardSubmitButtonText","cards","setCards","selectedCard","setSelectedCard","useEffect","getCards","then","res","catch","err","console","log","getUserInfo","Promise","all","getInitialCards","handleUpdateUser","data","setUserInfo","finally","handleAddPlace","addNewCard","newCard","handleUpdateAvatar","setUserAvatar","handleCardLike","card","isLiked","likes","some","item","_id","changeLikeCardStatus","state","map","currentCard","handleCardDelete","deleteCard","filter","handleEditProfilePopupOpen","handleAddPlacePopupOpen","handleEditAvatarPopupOpen","handleCardClick","closeAllPopups"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport PopupWithForm from './PopupWithForm';\nimport ImagePopup from './ImagePopup';\nimport api from '../utils/api';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\n\nfunction App() {\n  const [currentUser, setCurrentUser] = useState({\n    name: 'Ирусик',\n    about: 'offline',\n    avatar: '',\n  });\n\n  const [isEditProfilePopupOpen, setEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setAddPlacePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = useState(false);\n\n  const [profileSubmitButtonText, setProfileSubmitButtonText] = useState('Сохранить');\n  const [avatarSubmitButtonText, setAvatarSubmitButtonText] = useState('Сохранить');\n  const [cardSubmitButtonText, setCardSubmitButtonText] = useState('Создать');\n\n  const [cards, setCards] = React.useState([]);\n  const [selectedCard, setSelectedCard] = useState(null);\n\n  React.useEffect(() => {\n\n    api.getCards()\n      .then((res) => setCards(res))\n      .catch((err) => {\n        console.log(`Error: ${err}`);\n      })\n  }, [])\n\n  React.useEffect(() => {\n\n    api.getUserInfo()\n      .then((res) => {\n        setCurrentUser(res);\n      })\n      .catch((err) => {\n        console.log(`Error: ${err}`);\n      })\n  }, [])\n\n  React.useEffect(() => {\n    Promise.all([api.getUserInfo(), api.getInitialCards()])\n\n  }, [])\n\n  const handleUpdateUser = (data) => {\n    setProfileSubmitButtonText('Сохранение...');\n\n    api.setUserInfo(data)\n      .then((res) => {\n        setCurrentUser(res);\n      })\n      .then(() => {\n        setEditProfilePopupOpen(false);\n      })\n      .catch((err) => {\n        console.log(`Unable to update user info. ${err}`);\n      })\n      .finally(() => {\n        setProfileSubmitButtonText('Сохранить');\n      })\n  }\n\n  const handleAddPlace = (data) => {\n    setCardSubmitButtonText('Сохранение...');\n\n    api.addNewCard(data)\n      .then((newCard) => {\n        setCards([newCard, ...cards]);\n      })\n      .then(() => {\n        setAddPlacePopupOpen(false);\n      })\n      .catch((err) => {\n        console.log(`Unable to publish a card. ${err}`);\n      })\n      .finally(() => {\n        setCardSubmitButtonText('Создать');\n      })\n  }\n\n  const handleUpdateAvatar = (data) => {\n    setAvatarSubmitButtonText('Сохранение...');\n\n    api.setUserAvatar(data)\n      .then((res) => {\n        setCurrentUser(res);\n      })\n      .then(() => {\n        setEditAvatarPopupOpen(false);\n      })\n      .catch((err) => {\n        console.log(`Unable to update user avatar. ${err}`);\n      })\n      .finally(() => {\n        setAvatarSubmitButtonText('Сохранить');\n      })\n  }\n\n  const handleCardLike = (card) => {\n    const isLiked = card.likes.some(item => item._id === currentUser._id);\n\n    api.changeLikeCardStatus(card._id, isLiked)\n      .then((newCard) => {\n        setCards((state) => state.map((currentCard) => currentCard._id === card._id ? newCard : currentCard));\n      })\n      .catch((err) => {\n        console.log(`${err}`);\n      })\n  }\n\n  const handleCardDelete = (card) => {\n    api.deleteCard(card._id)\n      .then(() => {\n        setCards(cards.filter((item) => item !== card));\n      })\n      .catch((err) => {\n        console.log(`${err}`);\n      })\n  }\n\n  function handleEditProfilePopupOpen() {\n    setEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlacePopupOpen() {\n    setAddPlacePopupOpen(true);\n  }\n\n  function handleEditAvatarPopupOpen() {\n    setEditAvatarPopupOpen(true);\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n\n  function closeAllPopups() {\n    setEditProfilePopupOpen(false);\n    setAddPlacePopupOpen(false);\n    setEditAvatarPopupOpen(false);\n    setSelectedCard(null);\n  }\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"page\">\n        <div className=\"page__container\">\n          <Header />\n          <Main\n            cards={cards}\n            onEditProfile={handleEditProfilePopupOpen}\n            onAddPlace={handleAddPlacePopupOpen}\n            onEditAvatar={handleEditAvatarPopupOpen}\n            onCardClick={handleCardClick}\n            onCardLike={handleCardLike}\n            onCardDelete={handleCardDelete}\n          />\n          <Footer />\n          <EditProfilePopup \n            buttonText={profileSubmitButtonText}\n            isOpen={isEditProfilePopupOpen}\n            onUpdateUser={handleUpdateUser}\n            onClose={closeAllPopups}\n          />\n          <AddPlacePopup\n            buttonText={cardSubmitButtonText}\n            isOpen={isAddPlacePopupOpen}\n            onAddPlace={handleAddPlace}\n            onClose={closeAllPopups}\n          >\n          </AddPlacePopup>\n          <EditAvatarPopup \n            buttonText={avatarSubmitButtonText}\n            isOpen={isEditAvatarPopupOpen}\n            onUpdateAvatar={handleUpdateAvatar}\n            onClose={closeAllPopups}\n          /> \n          <PopupWithForm\n            name=\"confirm\"\n            title=\"Вы уверены?\"\n            buttonText=\"Да\"\n          />\n           { selectedCard && \n          <ImagePopup \n            card={selectedCard} \n            onClose={closeAllPopups}\n          /> \n        }\n        </div>\n      </div>\n    </CurrentUserContext.Provider>\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}